{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "python-buzz",
		"language": "PYTHON",
		"artifact_store": {
			"type": "s3",
			"repositories": [
				{
					"category": "rc-packaging",
					"bucket": "guide-rails-calculi-rc"
				},
				{
					"category": "final-packaging",
					"bucket": "guide-rails-calculi-final"
				},
				{
					"category": "logs",
					"bucket": "guide-rails-calculi-logs"
				}
			]
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"publish": true,
					"docker_attributes": {
						"repository": "((application.name))",
						"tags": [
							"((application.version))",
							"latest"
						],
						"path": "",
						"build_args": {
							"foo": "bar"
						}
					}
				},
				"exit_actions": {
					"default": {
						"code_analysis": {
							"properties": null
						}
					},
					"on_success": {
						"code_analysis": null
					},
					"on_failure": {
						"code_analysis": null
					},
					"on_abort": {
						"code_analysis": null
					}
				},
				"deployment_strategy": {},
				"application_init": {},
				"packages": [
					{
						"name": "buzz",
						"downloads": [],
						"files": [
							"*"
						]
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"instances": null,
					"loadbalanced": false,
					"loadbalancer": {
						"TargetGroupName": "",
						"TargetGroupPort": 0,
						"TargetGroupProtocol": "",
						"TargetType": "",
						"VPCID": "",
						"HealthCheckEnabled": false,
						"HealthCheckPort": "",
						"UnhealthyThresholdCount": 0
					}
				},
				"docker_options": {},
				"tasks": [
					{
						"name": "python-buzz",
						"steps": [
							{
								"name": "Print env",
								"definition": "Print env",
								"command": "env | sort",
								"properties": null
							},
							{
								"name": "Install dependencies",
								"definition": "Install dependencies",
								"command": "pip install --upgrade pip\npip install -r requirements.txt\n",
								"properties": null
							},
							{
								"name": "Run unit tests and generate reports",
								"definition": "Run unit tests and generate reports",
								"command": "echo \"unit testing\"\npython -m pytest -v --junit-xml test.xml  --cov=buzz --cov-report term --cov-report xml:coverage.xml tests/\nls",
								"properties": null
							}
						]
					}
				]
			},
			{
				"name": "Integration",
				"segment_type": "integration",
				"run_after": [
					"Build"
				],
				"job_steps": [
					{
						"name": "Deploy \u0026 test application",
						"definition": "Deploy \u0026 test application",
						"command": "env\n\n\npushd ${PKG_BASE_DIR}/buzz\npip install --upgrade pip\npip install -r requirements.txt\n\npython webapp.py \u0026\necho $! \u003e application.pid\n\nsleep 5\nhttp_code=$(curl -s -o /dev/null -I -w \"%{http_code}\" http://localhost:5000/)\nif [ $http_code -eq 200 ]; then\n    echo \"Application started successfully\" \n    pkill -F application.pid\nelse \n    pkill -F application.pid\n    exit 1\nfi",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"code_analysis": {
							"properties": null
						},
						"delete_instances": true
					}
				},
				"properties": [
					{
						"name": "transporter.username",
						"value": "((transporter.username))"
					},
					{
						"name": "transporter.password",
						"value": "((transporter.password))"
					}
				],
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"process": {
					"init": {}
				},
				"package_dependencies": [
					"buzz"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"instances": null,
					"loadbalanced": false,
					"loadbalancer": {
						"TargetGroupName": "",
						"TargetGroupPort": 0,
						"TargetGroupProtocol": "",
						"TargetType": "",
						"VPCID": "",
						"HealthCheckEnabled": false,
						"HealthCheckPort": "",
						"UnhealthyThresholdCount": 0
					}
				},
				"docker_options": {
					"repository": "pipeline-image-python-tools:latest"
				},
				"deployment_target": 1
			},
			{
				"name": "Production",
				"segment_type": "production",
				"persistent": true,
				"run_after": [
					"Integration"
				],
				"job_steps": [
					{
						"name": "Deploy and smoke test",
						"definition": "Deploy and smoke test",
						"command": "pushd ${PKG_BASE_DIR}/buzz\npip install --upgrade pip\npip install -r requirements.txt\n\npython webapp.py \u0026\necho $! \u003e application.pid\n\nsleep 5\nhttp_code=$(curl -s -o /dev/null -I -w \"%{http_code}\" http://localhost:5000/)\nif [ $http_code -eq 200 ]; then\n    echo \"Application started successfully\" \n    pkill -F application.pid\nelse \n    pkill -F application.pid\n    exit 1\nfi",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"code_analysis": {
							"properties": null
						},
						"delete_instances": false
					}
				},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"process": {
					"init": {}
				},
				"package_dependencies": [
					"buzz"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"gated": true,
				"post_deployment_actions": {
					"instances": null,
					"loadbalanced": false,
					"loadbalancer": {
						"TargetGroupName": "",
						"TargetGroupPort": 0,
						"TargetGroupProtocol": "",
						"TargetType": "",
						"VPCID": "",
						"HealthCheckEnabled": false,
						"HealthCheckPort": "",
						"UnhealthyThresholdCount": 0
					}
				}
			}
		],
		"exit_actions": {
			"default": {
				"fetch_logs": true,
				"code_analysis": {
					"publish": true,
					"properties": null
				},
				"delete_instances": true
			}
		},
		"default_properties": [
			{
				"name": "gr.dockerregistry.repo_url",
				"value": "docker.calculi.io",
				"type": "string"
			}
		],
		"deployment_files": [],
		"application_init": {},
		"process": {
			"init": {}
		},
		"releases": []
	},
	"organization": {
		"orgname": "Tutorial"
	}
}